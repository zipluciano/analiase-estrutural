import os
import json
import numpy as np

# -*- coding: utf-8 -*-
"""
Created on Mon Nov 30 11:25:52 2020

@author: Holdorf
"""
#############################################
#                                           #
#          VIGAS: de 0 até 31               #
#          PILARES: de 32 até 50            #
#                                           #
#############################################

# Matriz de Seções: [número da seção, área, módulo de elasticidade, momento de inércia, distância vertical à linha neutra]
secoes = [[0, 0.0573, 200.0e9, 0.00878, 0.4735],
                   [1, 0.0256, 200.0e9, 0.003250, 0.452],
                   [2, 0.0382, 200.0e9, 0.004830, 0.428],
                   [3, 0.0224, 200.0e9, 0.002460, 0.418],
                   [4, 0.0329, 200.0e9, 0.003430, 0.386],
                   [5, 0.01880, 200.0e9, 0.001660, 0.377],
                   [6, 0.027800, 200.0e9, 0.002360, 0.348],
                   [7, 0.01600, 200.0e9, 0.001190, 0.339],
                   [8, 0.019700, 200.0e9, 0.001290, 0.306],
                   [9, 0.01300, 200.0e9, 0.000762, 0.301],    # W610x101
                   [10, 0.019200, 200.0e9, 0.001010, 0.272],
                   [11, 0.011800, 200.0e9, 0.000554, 0.2665], # W530x92
                   [12, 0.00839, 200.0e9, 0.000351, 0.263],
                   [13, 0.020100, 200.0e9, 0.000795, 0.2375],
                   [14, 0.01440, 200.0e9, 0.000554, 0.231],
                   [15, 0.009480, 200.0e9, 0.000333, 0.2285],
                   [16, 0.006650, 200.0e9, 0.000212, 0.225],
                   [17, 0.014600, 200.0e9, 0.000462, 0.2095],
                   [18, 0.010800, 200.0e9, 0.000316, 0.2085],
                   [19, 0.007610, 200.0e9, 0.000216, 0.203],
                   [20, 0.005890, 200.0e9, 0.000156, 0.202],
                   [21, 0.004950, 200.0e9, 0.000125, 0.1995],
                   [22, 0.07030, 200.0e9, 0.002260, 0.2275],
                   [23, 0.0275, 200.0e9, 0.000712, 0.188],
                   [24, 0.0155, 200.0e9, 0.000367, 0.1815],
                   [25, 0.0129, 200.0e9, 0.000301, 0.178],
                   [26, 0.0101, 200.0e9, 0.000225, 0.1765],
                   [27, 0.008130, 200.0e9, 0.000178, 0.174],
                   [28, 0.007230, 200.0e9, 0.000160, 0.179],
                   [29, 0.005710, 200.0e9, 0.000121, 0.1755],
                   [30, 0.00496, 200.0e9, 0.000102, 0.1765],
                   [31, 0.004190, 200.0e9, 0.0000828, 0.174],
                   [32, 0.0182, 200e9, 0.000347, 0.323/2], ## Perfis de PILAR Daqui para baixo  W310x143
                   [33, 0.0136, 200e9, 0.000248, 0.312/2],   # W310x107
                   [34, 0.00942, 200e9, 0.000163, 0.31/2],   # W310x74
                   [35, 0.00755, 200e9, 0.000128, 0.302/2],
                   [36, 0.00665, 200e9, 0.000119, 0.318/2],  # W310x52
                   [37, 0.00567, 200e9, 0.0000991, 0.312/2],
                   [38, 0.00494, 200e9, 0.0000849, 0.31/2],
                   [39, 0.00418, 200e9, 0.0000649, 0.312/2], # W310x32.7
                   [40, 0.00304, 200e9, 0.0000429, 0.305/2],
                   [41, 0.0212, 200e9, 0.000298 ,0.29/2],
                   [42, 0.0129, 200e9, 0.000164,0.264/2],
                   [43, 0.0102, 200e9, 0.000126,0.257/2],
                   [44, 0.00858, 200e9, 0.000103,0.257/2],
                   [45, 0.00742, 200e9, 0.000087,0.252/2],
                   [46, 0.00626, 200e9, 0.0000712,0.247/2],
                   [47, 0.0057, 200e9, 0.0000708,0.267/2],
                   [48, 0.00419, 200e9, 0.0000491,0.259/2],
                   [49, 0.00363, 200e9, 0.0000401,0.259/2],
                   [50, 0.00285, 200e9, 0.0000287,0.254/2]]

database_filename = os.path.join(os.path.dirname(__file__), "dimensions_projeto_2.json")
try:
    os.remove(database_filename)
    print("Arquivo removido")
except:
    print("Não existe arquivo")

# [p1, p2, p3, p4, p5, p6, v1, v2, v3]
min_border_pilar, max_border_pilar = 32, 46
min_border_viga, max_border_viga = 0, 30

range_pilar = range(min_border_pilar, max_border_pilar)
range_viga = range(min_border_viga, max_border_viga)

perfis = []

for i in range_pilar:
    for j in range_viga:
        perfis.append([secoes[i], secoes[i + 1], secoes[i + 2],
                       secoes[i + 3], secoes[i + 4], secoes[i + 5],
                       secoes[j], secoes[j + 1], secoes[j + 2]
                      ])

dimensions_json = json.dumps({
    "dimensions": perfis
})

print(len(perfis))

try:
    file = open(database_filename, "x")
    file.write(dimensions_json)
    file.close()
    print("Os dados foram criados")
except:
    print("O arquivo de dados já existe")

